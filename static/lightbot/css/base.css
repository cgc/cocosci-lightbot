:root {
  --transition-speed: 250ms;
  --instruction-list-height: 32rem;
  --instruction-list-width: 12rem;
  --instruction-list-padding: 3px;
}

.InstructionList {
  border: 1px solid #ccc;
  height: var(--instruction-list-height);
  width: var(--instruction-list-width);
  display: flex;
  flex-flow: column;
  box-sizing: border-box;
}

.InstructionList .InstructionList-close {
  /*
  We handle 3 cases:
  Instructions in a standard instructionlist, which should be removable (this rule).
  Instructions in the source instructionlist, which should _not_ be removable (next rule).
  Instructions shown outside an instructionlist (usually for instructions). Should _not_ be removable (in .InstructionList-close).
  */
  display: initial;
}
.InstructionList.is-source .InstructionList-close,
.InstructionList.is-not-editable .InstructionList-close {
  display: none;
}

.InstructionList.is-disabled {
  background-image: linear-gradient(rgba(0, 0, 0, 0.15) 0 0);
  cursor: not-allowed;
}

.InstructionList-close {
  font-size: 1.4rem;
  cursor: pointer;
  vertical-align: middle;
  color: black;
  display: none;
}
.InstructionList-close:hover {
  text-decoration: none;
  color: red;
}

.InstructionList-header {
  border-bottom: 1px solid #ccc;
  font-weight: 400;
}

.InstructionList-instructions {
  flex-grow: 1;
  display: flex;
  flex-flow: column;
  overflow-y: scroll;
  padding: var(--instruction-list-padding) var(--instruction-list-padding) var(--instruction-list-padding) var(--instruction-list-padding);
  padding-bottom: 5rem; /* to help with drag/drop */
}

.InstructionList.is-source .InstructionList-instructions {
  padding-bottom: var(--instruction-list-padding);

  display: block;
}

.InstructionList-instruction {
  position: relative;
  /* #ccc and 4px come from bootstrap .btn */
  border: 1px solid #ccc;
  border-radius: 4px;
  background: white;
  margin: 1px;
  padding: 2px 4px;
  transition: background var(--transition-speed);
  display: inline-block;

  font-size: 18px;
  line-height: 18px;
}
.InstructionList.is-editable .InstructionList-instruction {
  cursor: grab;
}

.InstructionList-instructionIcon {
  position: relative;
  font-size: 2.5rem;
  vertical-align: top; /* makes the icon take no space in parent */
  top: -2px;
}

.InstructionList.is-editable .InstructionList-instruction:hover,
.InstructionList-instruction.sortable-ghost,
.InstructionList-instruction.is-active {
  /*box-shadow: 0 0 0 1px black;*/
  /*background: #ccc;*/
  /* https://stackoverflow.com/questions/65297617/how-to-make-an-elements-background-color-a-little-darker-using-css */
  background-image: linear-gradient(rgba(0, 0, 0, 0.15) 0 0);
}

/* https://colorhunt.co/palette/f2d7d9d3cedf9cb4cc748da6 actually not b/c it has a dark color */
/* https://colorhunt.co/palette/ffe6e6f2d1d1daeaf1c6dce4 */
.InstructionList-instruction[data-id="walk"] {
  background-color: #DAEAF1;
}
.InstructionList-instruction[data-id="light"] {
  background-color: #C6DCE4;
}
.InstructionList-instruction[data-id="turnLeft"] {
  background-color: #F2D1D1;
}
.InstructionList-instruction[data-id="turnRight"] {
  background-color: #FFE6E6;
}

/* https://colorhunt.co/palette/00ffab14c38eb8f1b0e3fcbf */
.InstructionList[data-name="process1"] .InstructionList-header,
.InstructionList-instruction[data-id="process1"] {
  background-color: #14C38E;
}
.InstructionList[data-name="process2"] .InstructionList-header,
.InstructionList-instruction[data-id="process2"] {
  background-color: #00FFAB;
}
.InstructionList[data-name="process3"] .InstructionList-header,
.InstructionList-instruction[data-id="process3"] {
  background-color: #B8F1B0;
}
.InstructionList[data-name="process4"] .InstructionList-header,
.InstructionList-instruction[data-id="process4"] {
  background-color: #E3FCBF;
}

/*
.InstructionList-instruction.sortable-ghost {
  background: red;
}
.InstructionList-instruction.sortable-drag {
  background: blue;
}
.InstructionList-instruction.sortable-chosen {
  color: green;
}
*/


.Editor {
  display: flex;
  user-select: none;
}

.Editor-instructions {
  display: flex;
  flex-flow: column;
  flex-wrap: wrap;
}

.Editor-canvas {
  position: relative;
}
.Editor-canvas .Editor-message {
  position: absolute;

  left: 50%;
  transform: translateX(-50%);

  padding: 2rem;
  margin: 1rem;
  border-radius: 4px;
  /*background-image: linear-gradient(rgba(1, 1, 1, 0.15) 0 0);*/

  width: 90%;
  backdrop-filter: blur(2px);
  background-color: #00000011;
}
.Editor-canvas .Editor-message:empty {
  display: none;
}
.Editor-canvas canvas {
  width: 100%;
  /* Doing this to remove "ghost margin" due to canvas being inline-block */
  display: block;
}

.Editor-cameraControls {
  position: absolute;
  left: 1rem;
  bottom: 1rem;
}

.Editor-sidebar {
  /* annoyingly need width here and in Editor-instructions:
    this one for tutorial with slimmed sidebar, below for normal UI */
  width: calc(3 * var(--instruction-list-width));
}

.Editor-instructions {
  height: calc(2 * var(--instruction-list-height));
  width: calc(3 * var(--instruction-list-width));
}

.Editor-controls {
  display: flex;
  justify-content: space-around;
}

.Editor-playButtons {
  margin: auto 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.Editor-playButtons .btn {
  margin: 2px;
}

.Editor-clearButtons {
  display: flex;
  max-width: 300px;
  flex-wrap: wrap;
  justify-content: center;
}

.Editor-counters {
  display: flex;
}
.Editor-counters .Counter {
  margin: auto 3px;
}

.Editor .InstructionList[data-name=instructions] {
  width: 100%;
  height: initial;
}

.Editor .InstructionList[data-name=main] {
  height: calc(2 * var(--instruction-list-height));
}


.Editor.is-tutorial .InstructionList.is-source .InstructionList-instructions {
  /* HACK: this is a reset that we employ just to make .glow work for tutorial */
  overflow-y: initial;
}
.Editor.is-tutorial-theme-playOnce .InstructionList.is-disabled,
.Editor.is-tutorial-theme-normalInstructions .InstructionList.is-disabled,
.InstructionList.is-not-editable {
  background-image: initial;
  cursor: initial;
}

.Counter {
  border: 3px solid var(--Counter-dark);
  border-radius: 4px;
  background: var(--Counter-light);
}

.Counter.is-step {
  --Counter-light: #FFE6E6;
  /* used https://codepen.io/njmcode/pen/NWdYBy, one step towards #FF0000, RGB blending */
  --Counter-dark: #ffd1d1;
  --Counter-placeholder: '?';
}

.Counter.is-length {
  --Counter-light: #DAEAF1;
  /* used https://codepen.io/njmcode/pen/NWdYBy, one step towards #0000FF, RGB blending */
  --Counter-dark: #c6d5f2;
  --Counter-placeholder: '0';
}

.Counter-header {
  font-size: 1rem;
  line-height: 1rem;
  border-bottom: 3px solid var(--Counter-dark);
  padding: 0.5rem;
  font-weight: 400;
}
.Counter-value {
  height: 4rem;
  line-height: 4rem;
  box-sizing: content-box;
  font-weight: 500;
}
.Counter-value:empty:before {
  content: var(--Counter-placeholder);
}


.CameraControls {
  position: relative;
  background: white;
  border-radius: 50%;
  width: 8rem;
  height: 8rem;
  border: 1px solid #ccc;
}

.CameraControls div {
  position: absolute;
  cursor: pointer;
}

:root {
  --CameraControls-margin: 2px;
}

.CameraControls-left {
  left: var(--CameraControls-margin);
  top: 50%;
  /* HACK: we flip the right arrow since left is larger */
  transform: translateY(-50%) scaleX(-1);
}

.CameraControls-right {
  right: var(--CameraControls-margin);
  top: 50%;
  transform: translateY(-50%);
}

.CameraControls-up {
  top: var(--CameraControls-margin);
  left: 50%;
  transform: translateX(-50%);
}

.CameraControls-down {
  bottom: var(--CameraControls-margin);
  left: 50%;
  transform: translateX(-50%);
}

.CameraControls-reset {
  font-size: 10px;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);;
  text-transform: uppercase;
  font-weight: 600;
}

.CameraControls-reset:empty:before {
  content: "ðŸŽ¦";
  font-size: 2rem;
}


/* imported from old projects */

.modal {
    display: block;
    position: fixed; /* Stay in place */
    z-index: 10; /* Sit on top */
    padding-top: 200px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.2); /* Black w/ opacity */
}

.modal-content {
   background-color: #fefefe;
   margin: auto;
   padding: 20px;
   text-align: center;
   border: 1px solid #888;
   width: 40%;
}

#jspsych-target {
  max-width: 1000px;
  padding-top: 20px;
  margin: 0 auto;
}

.jspsych-content {
  max-width: 100%;
 margin-top: 0;
 position: relative;
}

.legal hr {
 border-color: #ccc;
}

ul {
  list-style-position: inside;
}


/* The timer */

.Timer-progressContainer {
  display: inline-block;
  width: 50px;
  height: 1rem;
  background-color: #eee;
  box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
}
.Timer-progress {
  height: 100%;
  width: 100%;
  background-color: rgb(90, 160, 200);
  background-color: #aaa;
  transition: transform 1s linear;
  transform-origin: left;
  transform: scaleX(0);
}
.Timer-progress.progressing {
  transform: scaleX(1);
}

@keyframes error {
  000% { transform: translateX(0px); }
  025% { transform: translateX(-5px); }
  050% { transform: translateX(0px); }
  075% { transform: translateX(+5px); }
  100% { transform: translateX(0px); }
}

.animateError {
  animation: error 150ms 2;
}

.hide {
  display: none;
}
.invisible {
  visibility: hidden;
}

.break {
  flex-basis: 100%;
  height: 0;
}

.glow {
  /* from https://stackoverflow.com/questions/21240973/glow-animation-effect-in-css3-html5 */
  animation: pulse 3s infinite linear;
  position: relative;
  z-index: 10;
}
@keyframes pulse {
  0%, 100% { box-shadow:0 0  16px 8px #0066cc; }
  50% { box-shadow:0 0  20px 10px #0066cc; }
}
/*
@keyframes pulse {
  0%, 100% { box-shadow:0 0  20px 10px #0066cc; }
  50% { box-shadow:0 0  30px 15px #0066cc; }
}
*/


:root {
  --flourish-dx: 0;
  --flourish-dy: -100px;
  --flourish-duration: 1.5s;
}
.Flourish {
  animation: Flourish var(--flourish-duration);
  position: fixed;
  z-index: 10;
  /*opacity: 0; only need this if we don't immediately remove*/
}
@keyframes Flourish {
  0% {
    opacity: 0;
  }
  15% {
    opacity: 1;
  }
  85% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateY(var(--flourish-dy)) translateX(var(--flourish-dx));
  }
}



